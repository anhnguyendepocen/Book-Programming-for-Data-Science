[
["index.html", "課程大綱 Course Objectives Assesment Before you start GitHub in-class practice repo 平時成績", " 課程大綱 Course Objectives This course is to build the foundation for being a data scientist–who masters both data analysis and data engineering. There are two programming languages that will be taught through the course: R and Javascript. R will serve as the data analysis backend, while Javascipt will serve as the communication tool interacting with cloud services–such as Google G Suite. After taking the course, students will be able to create their own data services that can automate routine works and enhance their productivities. (The course will be taught mainly in English which is an important skill for being a good programmer.) 本課程是成為資料科學家的基礎課程。課程設計會使用R語言來當做資料處理工具，同時也會教授Javascript來衘接與雲端服務的資訊互動（如Google G Suite）。 認真學完本課程的學生將俱備有能將日常例行工作自動化的創造能力。由於英語是程式語言的主要寫作與溝通工具，本課程多數時候為英語授課。 林茂廷老師 107學年 Assesment 作業：15% 期中考：35% 期末考：40% 課堂GitHub commits：10% Before you start Before your start, please do the following: Register a Gmail. Install Google Chrome. Install R, then RStudio. Register a GitHub account, then install Github Desktop. Register a Gitter account using your GitHub account. Sign up Gitter chat room of this course. Sign up a Hypothes.is account. Join course Hypothes.is group (click to join). Install Hypothes.is Chrome extension Fill in your account information in 學生資訊帳號單. GitHub in-class practice repo Students Fill in your in-class practice repo information in: 資料科學入門GitHub課堂練習 Teacher During the class I will constantly update my in-class demo in the following repo: https://github.com/tpemartin/ProgrammingForDataScience-Practice 平時成績 看公告加分、課堂練習成績、作業成績都放在 平時成績Google Sheets "],
["author.html", "教師資訊", " 教師資訊 林茂廷老師 辦公室：社3F01 諮詢時間：（四）11am-12noon 請點Google月曆預約 email: mtlin@gm.ntpu.edu.tw "],
["introduction.html", "第 1 章 Introduction 1.1 Data Science v.s. Data Engineering1 1.2 What should a full-scope data scientist know? 1.3 Data Service Development 1.4 Goal of this course", " 第 1 章 Introduction 1.1 Data Science v.s. Data Engineering1 Data science One job of a data scientist is asking the right questions on any given dataset (whether large or small). Analyze data Communicate with audience Data engineering The data engineer gathers and collects the data, stores it, does batch processing or real-time processing on it, and serves it via an API (Application Program Interface) to a data scientist who can easily query it. 1.2 What should a full-scope data scientist know? Statistics / Mathematics: 統計相關科目 Data engineering (a little bit) Service: what kinds of service to be generated from data? Front end user interface: who will use your service? Where are the data from? Data storage Understand humanity…(this is where economics kicks in.) The data we will focus on are human-related data. Therefore, any question we try to answer is human-related. How to model decisions? What are the important predictors? Causality How college students should prepare for a data science career 1.3 Data Service Development Service developer: Data scientist Data engineer Users Cloud: Remote servers that can be used to store data, provide computation power, or provide service etc. 1.4 Goal of this course Preliminary data analysis using R. Invent new idea (project) regarding programming and cloud services to solve life problems. Developer side (i.e. us): R, javascript, etc. Cloud side: how to find and use proper API/SDK in R or javacript to harness cloud services. Learn to accomplish projects as a team. GitHub knitr (Xie 2015) 和 bookdown (Xie 2018)。 参考資料 "],
["r-and-rstudio.html", "第 2 章 R and RStudio 2.1 主要參考書籍 2.2 What is R? What is RStudio? 2.3 RStudio environment 2.4 R Markdown", " 第 2 章 R and RStudio 2.1 主要參考書籍 R for Data Science: abbreviation RDS. 資料科學與R語言 by 曾意儒: abbreviation 曾意儒. R Markdown: the Definite Guide: abbreviation RMG. 2.2 What is R? What is RStudio? R: programming language Base: https://www.r-project.org/ CRAN, Comprehensive R Archive Network The CDN, Content Delivery Network for R. https://cloud.r-project.org/： check Packages on the left. RStudio Integrated Development Environment (IDE) for R R-bloggers https://www.r-bloggers.com/ 2.3 RStudio environment RDS-6 Editor Two ways of keeping your script Script: a collection of code lines In this course, to save your script we will: mainly use R Markdown/R Notebook: .Rmd file sometimes, R Script: .R file 2.4 R Markdown Front matter Setup of the document layout Use YAML language Code chunk Where the code for execution Text area Take Markdown format "],
["start-a-project.html", "第 3 章 Start a Project 3.1 Project 3.2 GitHub Desktop", " 第 3 章 Start a Project 3.1 Project 以下在RStudio進行： Start a new project File -&gt; New Project … Step 1 Step 2 Step 3 Step 4 Here we check create a git repository. 避免中文路徑 Start a new file Create a notebook: File–&gt;New File–&gt;R Notebook. Title: “YYYY-MM-DD” Click save: Name your file as YYYY-MM-DD Step 1 Step 2 Step 3 避免中文檔名 Save with Encoding File–&gt;Save with Encoding… choose UTF8 and check Set as default encoding for source files. Step 1 Step 2 3.2 GitHub Desktop 以下在GitHub Desktop進行： Add local repository File–&gt;Add Local Repository… Step 1 Step 2 Publish repository Type your Summary Click Commit to master Click Publish repository. (不打勾) Uncheck Keep this code private. click Publish repository. Step 1 Step 2 Step 3 New your project is saved in the cloud of your GitHub.com account. To see it, In GitHub desktop, click Repository–&gt;View on GitHub Step 1 Step 2 Step 3 From View on GitHub, you will see your repository (i.e. project) URL as https://github.com/{username}/{repo name}. 往後的課堂練習同學請固定使用該repo。 請到以下表單填寫你的課堂練習repo資訊。 http://bit.ly/2D0e0qt "],
["r-basics.html", "第 4 章 R Basics 4.1 主要參考書籍 4.2 Numeric (vector) 4.3 Character/String (vector) 4.4 Factor 4.5 Date and Time 4.6 Operation on Strings 4.7 Taiwan date-time 4.8 練習題", " 第 4 章 R Basics 4.1 主要參考書籍 R for Data Science: abbreviation RDS. 資料科學與R語言 by 曾意儒: abbreviation 曾意儒. 4.2 Numeric (vector) a&lt;-5 a2&lt;-5L aVector&lt;-c(5,6,7) a2Vector&lt;-c(5L,6L,7L) 使用class()查詢上述物件類別。 Operations on numeric objects 曾意儒: 1.6.1-1.6.2 4.3 Character/String (vector) b&lt;-&quot;你好&quot; bVector&lt;-c(&quot;你好&quot;,&quot;How are you?&quot;) 使用class()查詢上述物件類別。 Understand function usage help Take class() as an example class{base} Documentation Description Usage Arguments Details Examples Type ?class in console window will also work. 4.4 Factor Factors are used to work with categorical variables, variables that have a fixed and known set of possible values. RDS: Chapter 15 資料來源：經濟系大學部98_105學年度入學學生 library(readr) student &lt;- read_csv(&quot;https://raw.githubusercontent.com/tpemartin/course-107-1-programming-for-data-science/master/data/student.csv&quot;) library(dplyr) library(magrittr) student %&lt;&gt;% mutate( 身高級距=cut(身高,c(0,150,155,160,165,170,175,180,185,200))) 入學年、出生地、性別、身高、身高級距，何者是類別變數（即具有分類的意義）？ 若資料有「學號」變數，你覺得它應該是什麼class？ Change class as.numeric(), as.character(), as.factor() as.factor(student$出生地) -&gt; student$出生地 將剩下的變數都轉成適當的class。 Factor has levels. levels(student$出生地) Count table(student$出生地) Ordered factor 入學年、出生地、性別、身高、身高級距，其中那些變數不同類間可以排序（即比大小）？ Use factor() to convert to ordered factor. factor(student$身高級距, levels=c(&quot;(0,150]&quot;,&quot;(150,155]&quot;, &quot;(155,160]&quot;, &quot;(160,165]&quot; ,&quot;(165,170]&quot;, &quot;(170,175]&quot; ,&quot;(175,180]&quot; ,&quot;(180,185]&quot;, &quot;(185,200]&quot;), ordered=TRUE) -&gt; student$身高級距 You can save c(&quot;(0,150]&quot;,&quot;(150,155]&quot;, &quot;(155,160]&quot;, &quot;(160,165]&quot; ,&quot;(165,170]&quot;, &quot;(170,175]&quot; ,&quot;(175,180]&quot; ,&quot;(180,185]&quot;, &quot;(185,200]&quot;) as another variable, say heightLevels, and set levels=heightLevels. heightLevels &lt;- c(&quot;(0,150]&quot;,&quot;(150,155]&quot;, &quot;(155,160]&quot;, &quot;(160,165]&quot; ,&quot;(165,170]&quot;, &quot;(170,175]&quot; ,&quot;(175,180]&quot; ,&quot;(180,185]&quot;, &quot;(185,200]&quot;) factor(student$身高級距, levels=heightLevels, ordered=TRUE) -&gt; student$身高級距 4.5 Date and Time 參考資料： RDS: Chapter 16 使用R處理時間資料（DateTimeClasses）的格式（lubridate, POSIXlt,POSIXlc） a&lt;-&quot;2017-01-31&quot; a的class是什麼？ Date/Time class requires parsing function to help computer understand the meaning of the content. Two different classes date-time: “2017-11-28 12:00:00” the number of seconds since 1970-01-01 00:00:00 UTC. (aka POSIXct) date: “2017-11-28” the number of days since 1970-01-01. package: lubridate library(dplyr) library(lubridate) a &lt;- ymd(&quot;2017-01-31&quot;) b &lt;- ymd_hms(&quot;2017-01-31 20:11:59&quot;) a,b的class是什麼？ The date-time class in R is POSIXct. ymd(),ymd_hms()會自動去猜西元年、月、日及時間的斷句規則。 a &lt;- ymd(&quot;2017/01/31&quot;) b &lt;- ymd_hms(&quot;2017-01-31 2:53:00pm&quot;) Try help search on ymd(). Two ways to call functions Method 1: library(lubridate) ymd(&quot;2017/01/31&quot;) Method 2 lubridate::ymd(&quot;2017/01/31&quot;) Method 1一口氣引入lubridate所有函數，且一直存在程式環境裡。Method 2沒有引入lubridate所有函數，只在那一行程式使用單單那一個函數。 兩個library可以有相同函數（如 dplyr::select及raster::select），此時用Method 2可避免使用混淆。 &gt; sessionInfo() to see how many libraries you have attached to the environment so far. Generate date-time sequence a &lt;- seq(ymd(&quot;2001-01-01&quot;),ymd(&quot;2018-09-01&quot;),by=&quot;month&quot;) b &lt;- seq(ymd(&quot;2001-01-01&quot;),ymd(&quot;2018-09-01&quot;),by=&quot;quarter&quot;) c &lt;- seq(ymd(&quot;2001-01-01&quot;),ymd(&quot;2018-09-01&quot;),by=&quot;year&quot;) 4.6 Operation on Strings It is common to operate on strings such as subset, join and split. Here we only talk about some of them. We will learn more later. Package: stringr Subset str_sub(),str_subset(),str_extract(),str_match() Use &gt; ?str_sub() to get the function help. And run examples in a code chunk. 資料：學生學號 studentID &lt;- read_csv(&quot;https://raw.githubusercontent.com/tpemartin/github-data/master/studentID.csv&quot;) 利用str_sub()取出每位學生系別。 Join/Split str_c(),str_split_fixed() Use &gt; ?str_c() to get the function help. 練習1 str_c(letters,LETTERS) str_c(letters,LETTERS,sep=&quot;-&quot;) str_c(&quot;lowercase: &quot;, letters, &quot;, capital: &quot;, LETTERS) 練習2 資料：班上Github帳號資料 library(readr) githubData &lt;- read_csv(&quot;https://raw.githubusercontent.com/tpemartin/github-data/master/githubData.csv&quot;) githubData[c(2,3,4),] -&gt; sampleGithub str_c(sampleGithub$`GitHub username`, sampleGithub$`GitHub repo name`) str_c(&quot;https://github.com/&quot;, sampleGithub$`GitHub username`, &quot;/&quot;, sampleGithub$`GitHub repo name`) 練習3 資料來源： 第三屆經濟播客競賽人氣投票結果 第三屆經濟播客影片 本屆經濟播客官網 library(readr) filmVotingData &lt;- read_csv(&quot;https://raw.githubusercontent.com/tpemartin/course-107-1-programming-for-data-science/master/data/%E7%AC%AC%E4%B8%89%E5%B1%86%E7%B6%93%E6%BF%9F%E6%92%AD%E5%AE%A2%E7%AB%B6%E8%B3%BD%E5%8F%83%E8%B3%BD%E4%BD%9C%E5%93%81%E6%8A%95%E7%A5%A8%E7%B5%90%E6%9E%9C%E6%A8%A3%E6%9C%AC%20-%20Sheet1.csv&quot;) A. 請在filmVotingData創造出單純「西元年」變數。 B. 每位投票者最多可選兩部喜歡的影片(有人只選一部)，請問你如何計算每部影片有多少人選？ 4.7 Taiwan date-time 台灣的資料常為民國年月，又因為其資料記載方式，初次引入的年月資料常如下所示： 民國年月&lt;-c(&quot;099/01&quot;,&quot;099/02&quot;,&quot;099/03&quot;) 將上述資料轉成西元年月格式（民國年+1911即為西元年）的date class。你的程式設計策略為何？ (hint: date class的變數可以用+years(k)把西元年增加k年。同學也可以查查lubridate::years()用法) 4.8 練習題 線上練習 線上練習網址：https://garylkl.shinyapps.io/Chapter4/ 作業 請連到作業repo取得作業內容： Exercise 1交件網址 作業1講解影片 Exercise 2交件網址 作業2講解影片 作業repo下載方式 以下本學期只需執行一次 連到GitHub.com 登入。 連到作業repo，執行Fork： 使用學校電腦：以下每次都要執行 打開GitHub Desktop， 執行Clone Repository： 選剛才的Fork的repo，接著按Clone. 使用自己電腦：以下只執行一次 如同使用學校電腦的步驟，但你只需做一次，以後無需再做。 如何收新的作業 在前面步驟該做都有做的情況下，每次都要進行以下步驟, 以更新你載回的作業內容： 首先打開GitHub Desktop軟體，確認你是否有登入。 點Fetch origin檢查老師作業最新狀態。 從選單Branch-&gt;Merge Into Current Branch. 選upstream/master為更新來源，並按Merge into master確認。 點Push origin更新你在雲端的資料。 "],
["data-frame.html", "第 5 章 Data Frame 5.1 主要參考資料 5.2 Develop a Project 5.3 Understand your packages 5.4 Data Frame 5.5 練習題", " 第 5 章 Data Frame 5.1 主要參考資料 曾意儒, Chapter 2.5 RDS: Chapter 11 Data import 5.2 Develop a Project 目的：建立全班線上通訊錄並進行基本分析 Lay out your strategy Keys: 全班, 線上,通訊錄 Key Strategy 全班 使用Google Form給大家自己填） 線上 使用Google Form 通訊錄 欄位：姓名,連絡email,…,etc 基本分析 使用R Google G Suite A brand of cloud computing, productivity and collaboration tools, software and products developed by Google. In this course, we will learn to use R to interact with: Google Form Google Sheets Google Calendar More if time allows. Google Form是常用的線上調查表單功具（建立方法，詳見Google Form製作）。 請連到以下表單填寫個人資訊： Google Form通訊錄調查單 Retrieve useful packages 要在R裡分析Google調查結果你需要R做哪些事？ Try google search: google sheets R. Import Google Sheets library(googlesheets) This package only works with those google sheets that belong to you, which should be in your Google Drive. So you need to Open https://docs.google.com/spreadsheets/d/1mC9bnxj11NCNoOCw0Vmn4nxERbHtLjeGo9v9C9b2GDE/edit#gid=1783332305 File -&gt; Add to My Drive… To get google sheet link: Gain access authorization to your sheets gs_auth(new_user = TRUE) Download Google sheets gsSurvey&lt;-gs_key(&quot;1mC9bnxj11NCNoOCw0Vmn4nxERbHtLjeGo9v9C9b2GDE&quot;) #download sheet information as an object classSurvey&lt;-gs_read(gsSurvey,ws=1) #access the 1st worksheet Check the help of the above two functions: gs_key() and gs_read() If you want to share your google sheet for others to access, you need to do the following two things in your google sheets: File -&gt; Publish to the web… File -&gt; Share… 5.3 Understand your packages From RStudio help Clik the package under Packages tab. Look for User guides, package vignettes and other documentation. Google the package Google package name and R together. Try google search: googlesheets R. 5.4 Data Frame Like a spreadsheet (試算表). Each row represents an observation, while each column represents a variable (變數, such as Timestamp, Email Address, 姓名, 學號, 居住地行政區, 性別, 本學期學分數, 本學期目前已參加之課外活動). class(classSurvey) 5.4.1 Create a data frame Manual creation data.frame() (...,stringsAsFactors) : All character vectors are defaulted to be parsed as factors. StuDF &lt;- data.frame( StuID=c(1,2,3,4,5), name=c(&quot;小明&quot;,&quot;大雄&quot;,&quot;胖虎&quot;,&quot;小新&quot;,&quot;大白&quot;), score=c(80,60,90,70,50) ) StuDF 5.4.2 Column/Row names Column names names(StuDF) colnames(StuDF) names() is more general than colnames, which can be applied to objects other than data frames. 檢查classSurvey的變數名稱。 Row names rownames(StuDF) 檢查classSurvey的rownames。 5.4.3 Extract observations: numerical/logical index by matrix index StuDF[1,2] StuDF[,2] StuDF[1,] StuDF[c(1,4),] StuDF[c(1,4),c(2,3)] Compare the following two StuDF[c(1,4),] StuDF[-c(1,4),] If you are selecting consecutive rows/columns, you can use : operation. c(1:3) # same as c(1,2,3) c(5:7) # same as c(5,6,7) c(1,5:7,10) #same as c(1,5,6,7,10) 請使用matrix index來產生head(classSurvey)的結果。 by TRUE/FALSE StuDF[c(T,F,F,F,F),c(F,T,F)] StuDF[c(T,F,F,T,F),] You can write TRUE as T, and FALSE as F; but not True, true, TRue, False, false, FAlse, etc. When apply sum() to a logical vector, it gives you the total number of TRUEs. a&lt;-c(T,T,F,F,T,F,F) sum(a) Reproduce StuDF[1,] and StuDF[c(1,4),c(2,3)] using T/F method. 5.4.4 Relational operators It is common to ask the relation between two values, such as “is A larger than B?” In R, the followings are available relational operators: Relational Operators Operator Description &lt; Less than &gt; Greater than &lt;= Less than or equal to &gt;= Greater than or equal to == Equal to != Not equal to 範例 “誰的分數大於等於80？” “小新的分數幾分？” (StuDF$score &gt;= 80) (StuDF$name == &quot;小新&quot;) 找出StuDF分數大於等於80的人名。 找出小新的分數。 which() return the locations of TRUE elements in a logical vector. which(StuDF$score &gt;= 80) which(StuDF$name == &quot;小新&quot;) 5.4.5 Logical operators Sometimes we want to join several relational results together. It can be done through the following logical operators: Logical Operators: Operator Description ! Logical NOT &amp; Element-wise logical AND &amp;&amp; Logical AND | Element-wise logical OR || Logical OR 範例 (classSurvey$性別 == &quot;男&quot;) (classSurvey$本學期學分數 &gt; 20) (classSurvey$性別 == &quot;男&quot; | classSurvey$本學期學分數 &gt; 20) 找出「性別為男」且「本學期學分數&gt;26」的人名。 找出住在台北市的人。 找出住在新北市的人。 5.4.6 Object extraction: $ and [ ] $ and [] can be used to extract parts of an object, not limiting to data frames. To select elements: $ applied to element with names. 只能用於有「名字」的元素，且一次只能取一個元素。 若物件(object)本身為vector，則無法用來取出它的元素。 [] applied to element with or without names. 物件為data frame或矩陣matrix時，用[i,j]來取，其中i,j分別代表元素（們）所在行(row)及列(column)。 若為一維向量，用[i]來取。 若為多維度的陣列(array)則會有更多元素位置指標，如三維空間會有[i,j,k]等。 i, j, k …可用數字，也可用名稱。 StuDF$StuID StuDF[,c(&quot;StuID&quot;)] StuDF$name StuDF[,c(&quot;name&quot;)] StuDF[,c(&quot;StuID&quot;,&quot;name&quot;)] ## 無法用$一次取兩個元素 # StuDF$c(&quot;StuID&quot;,&quot;name&quot;) **一次(joint)取 或 疊代(recursive) 取 StuDF[c(1,4),c(2)] StuDF[,c(2)][c(1,4)] ## the second one is equivalent to StuDF[,c(2)] -&gt; aa aa[c(1,4)] 請問可以這樣取元素嗎？ StuDF[,c(1,3)][c(1,4)] 疊代(recursive) 時可以$或[]混搭。 範例 StuDF$name[c(1,4)] StuDF[c(1,4),]$name Try StuDF$c(&quot;StuID&quot;,&quot;name&quot;) StuDF$[c(&quot;StuID&quot;,&quot;name&quot;)] 5.4.7 Generic replacement 有些函數除了可用來查詢物件的某些原生屬性值外，也可用來改變替換原生屬性值。如names(x)除了顯示x所含元素名稱外，也可以用names(x)&lt;- ...來取代其本元素名稱。 names(StuDF) names(StuDF) &lt;- c(&quot;學號&quot;,&quot;姓名&quot;,&quot;成績&quot;) names(StuDF) 範例 執行以下程式 library(readr) student &lt;- read_csv(&quot;https://raw.githubusercontent.com/tpemartin/course-107-1-programming-for-data-science/master/data/student.csv&quot;) library(dplyr) library(magrittr) student %&lt;&gt;% mutate( 身高級距=cut(身高,c(0,150,155,160,165,170,175,180,185,200))) levels()除了顯示factor物件的類別外，也可以用來進行generic replacement。 請把身高級距改成“小個子”,“中等個子”,“高個子”三類，其中 170公分以下的都稱為“小個子”，170-180為“中等個子”，180以上為“高個子”。 levels(student$身高級距) 經由$與[]取出的元素均可進行原生值替換。 StuDF$成績[c(4)] StuDF$成績[c(4)] &lt;- 75 若只要改變一部份的原生屬性，可以用$或[]來選出原生屬性值的位置再替換，如： 先重新執行資料引入，接著執行 student$新身高級距 &lt;- student$身高級距 請善用levels()及[]元素選取，讓新身高級距(0,160]為最小級距（即把原生的三個級距值,(0,150],(150,155],(155,160],合併成一類。 5.5 練習題 課堂練習 1. 以下各題以課堂調查的classSurvey資料框（data frame）為主： 1.1 使用dim()查詢classSurvey有多少觀察值？有多少變數？(前者也可以用nrow(), 後者也可以用ncol()) 1.2 新增一個變數叫年級，它必需是個factor，且有四個levels：大一，大二，大三，大四及以上。(hint: 取出適當的學號碼，透過as.factor(),levels()來達成。) 1.3 各年級有多少人？ 1.4 在課堂調查的classSurvey裡大二（含）以上的人有多少比例為男性？ （hint: length()可計算vector（如一個變數）有多少元素，dim()計算矩陣或data frame有多少個row(即觀測值個數)及多少個column(即變數數目)） 1.5 大一的男性比例又有多少呢？ 1.6 學生參加最多的課外活動是什麼？請適當利用table()呈現。 1.7 學生來自的縣市分佈如何？請適當利用table()呈現。 作業 請連到作業repo取得作業內容： Exercise 3交件網址 作業3講解影片 "],
["data-transformation.html", "第 6 章 Data Transformation 6.1 主要參考資料 6.2 Pipe operator 6.3 Data cleaning", " 第 6 章 Data Transformation In this chapter, we are going to learn pipe operator and some data processing functions from dplyr package. 6.1 主要參考資料 陳柏銘, R dplyr minicourse 曾意儒, Chapter 7.3 RDS: Chapter 5 More on pipe operators 6.2 Pipe operator 程式設計有很多部份像是個生產線加工流程，pipe operator讓流程更透明易懂。 Consider the following task: converting the following Taiwan calendar dates into western calendar dates: 民國年月&lt;-c(&quot;099/01&quot;,&quot;099/02&quot;,&quot;099/03&quot;) We normally layout our strategy in sequential statement such as: Append “1” to the front of 民國年月, and “/01” to the back of 民國年月。 Given updated 民國年月, use lubridate::ymd() to convert it to a Date(POSIXct) object. Add 911 years to the step 2 object (using lubridate::years()). library(stringr) library(lubridate) 民國年月&lt;-c(&quot;099/01&quot;,&quot;099/02&quot;,&quot;099/03&quot;) # 1 str_c(&quot;1&quot;,民國年月,&quot;/01&quot;)-&gt;民國年月 # 2 lubridate::ymd(民國年月) -&gt; 民國年月 # 3 民國年月 + years(911) 民國年月&lt;-c(&quot;099/01&quot;,&quot;099/02&quot;,&quot;099/03&quot;) library(dplyr) # 1 民國年月 %&gt;% str_c(&quot;1&quot;, . ,&quot;/01&quot;) %&gt;% ymd %&gt;% { . + years(911) } %&gt;% pipe operator: 預設：%&gt;% 把它左邊（LHS）的物件流入它右邊（RHS）函數的argument第一個位置。 ) 若要流入右邊函數的「非」第一位置argument，則用.在右邊函數中標示。 %&gt;% 可進行串接，則下一個%&gt;%會以上個函數輸出結果當做新的LHS物件。 若右側是一串運算，而非函數，則用{...}把右側運算括住，並把LHS物件要出現的位置用.取代。 6.3 Data cleaning In data science, it is very common to subsample (取子樣本，即原樣本的一部份觀察值) based on some criteria: filter() select certain variables (選取某些變數): select() create a new variables (創新變數): mutate() compute a statistic value based on observations (計算某些樣本特徵值，如一群觀察值的平均值、最大值等): summarise() analysis by groups: group_by() These can easily be achieved through the dplyr package. library(dplyr) When we first import a dataset, we usually have to check variable classes, NAs and other anomalies before we continue to exploratory data analysis. Tools provided by dplyr are very handy for this task. 範例資料 政府開放平台:106學年大專院校校別學生數 library(readr) collegeData &lt;- read_csv(&quot;https://quality.data.gov.tw/dq_download_csv.php?nid=6231&amp;md5_url=dda8fca407131483c1d8cbf3d61cf793&quot;) 6.3.1 mutate library(dplyr) mutate( collegeData, 學校代碼=as.factor(學校代碼), 學校名稱=as.factor(學校名稱) ) -&gt; collegeData2 上述的程式如果用以前的寫法，要如何寫呢？ 將日間/進修別，等級別改成factor，同時一年級男生，一年級女生改成numeric。 請使用%&gt;%方式寫。 6.3.2 Parsing characters 要將character class轉成不同class，雖然可以用as.XXX(), XXX為class name, 但它有時會判斷失敗，而把該筆資料轉成NA。 collegeData %&gt;% mutate( `日間∕進修別`=as.factor(`日間∕進修別`), 等級別=as.factor(等級別), 一年級男生=as.numeric(一年級男生), 一年級女生=as.numeric(一年級女生) ) -&gt; collegeData3 請檢查前面一年級男/女生的結果。 as.numeric(&quot;1,234&quot;) Package readr comes with a variety of character (vector) parsers. They are names as parse_*() where * is the value type to parse to. Package readr parsers usages: parse_logical(x, na = c(&quot;&quot;, &quot;NA&quot;), locale = default_locale()) parse_integer(x, na = c(&quot;&quot;, &quot;NA&quot;), locale = default_locale()) parse_double(x, na = c(&quot;&quot;, &quot;NA&quot;), locale = default_locale()) parse_character(x, na = c(&quot;&quot;, &quot;NA&quot;), locale = default_locale()) where na=... defines characters that should be parsed as NA. locale =... is used to setup an environment that describes certain patterns of writing used in some part of the world, where … can be supplied by locale() function. (Note：locale means 場景) Reference: RDS, Ch11.3 Parsing a vector We can use locale=locale(xxx=...) to set xxx pattern of writing to different styles. For example, xxx can be grouping_mark (千分位符號) decimal_mark (小數點符號) library(readr) cl&lt;-locale(grouping_mark = &quot;,&quot;) # 創造cl來描述千分位符號使用&quot;,&quot;的習慣場景 collegeData %&gt;% mutate( `日間∕進修別`=as.factor(`日間∕進修別`), 等級別=as.factor(等級別), 一年級男生=parse_number(一年級男生,locale=cl), 一年級女生=parse_number(一年級女生,locale=cl) ) -&gt; collegeData4 When there are parsing problem warnings, it is good to use problems(.the_parsed_result_object) such as problems(collegeData4$一年級男生) 選出collegeData4中一年級男生有parsing問題的樣本之學校名稱，日間/進修別，等級別。 collegeData4裡存不存在觀測值是「一年級男生，或一年級女生只有一個有parsing問題」。(hint: setequal(.x,.y)可比對兩向量的內容集合是否相同,setdiff(.x,.y)會留下.x集合中不在.y集合的元素) 關於set***(.x,.y)一系列的說明可見： RDS, Ch13.7 New variables generated within mutate() can be sequentially called–variables defined at the front can be called immediately at the back. The following two examples are equivalent. collegeData %&gt;% mutate( `日間∕進修別`=as.factor(`日間∕進修別`), 等級別=as.factor(等級別), 一年級男生=parse_number(一年級男生,locale=cl), 一年級女生=parse_number(一年級女生,locale=cl) ) -&gt; collegeData4 collegeData4 %&gt;% mutate( 一年級男生每千人=一年級男生/1000, 一年級女生每千人=一年級女生/1000 ) -&gt; collegeData5 collegeData %&gt;% mutate( `日間∕進修別`=as.factor(`日間∕進修別`), 等級別=as.factor(等級別), 一年級男生=parse_number(一年級男生,locale=cl), 一年級女生=parse_number(一年級女生,locale=cl), 一年級男生每千人=一年級男生/1000, 一年級女生每千人=一年級女生/1000 ) -&gt; collegeData6 head(collegeData5[,c(&quot;一年級男生&quot;,&quot;一年級女生&quot;,&quot;一年級男生每千人&quot;,&quot;一年級女生每千人&quot;)]) head(collegeData6[,c(&quot;一年級男生&quot;,&quot;一年級女生&quot;,&quot;一年級男生每千人&quot;,&quot;一年級女生每千人&quot;)]) 6.3.3 Apply to multiple variables If you want to mutate a group of variables you can use mutate_all(.data, .funs): for all variables 對所有變數做.funs的動作。.funs可使用funs()函數，使用範例如下： 範例 一個函數 library(stringr) college1stYearData %&gt;% mutate_all(funs(parse_number(.,locale=cl))) -&gt; college1stYearDataNumeric 範例 二個函數 college1stYearDataNumeric %&gt;% mutate_all( funs( 每百人=./100, 每千人=./1000 ) ) 執行以下程式： library(googlesheets) gs_auth(new_user = TRUE) gsSurvey&lt;-gs_key(&quot;1mC9bnxj11NCNoOCw0Vmn4nxERbHtLjeGo9v9C9b2GDE&quot;) #download sheet information as an object classSurvey&lt;-gs_read(gsSurvey,ws=1) #access the 1st worksheet classSurvey %&gt;% select(居住地行政區,性別) -&gt; classSurveyPartial 將classSurveyPartial的所有變數轉成factor class。 mutate_at(.data, .vars, .funs): for some variables 對.vars所定義選出的變數做.funs的動作, 其中.vars可透過vars()來定義。 範例 直接使用變數名稱： collegeData %&gt;% mutate_at( vars(一年級男生,一年級女生), funs(parse_number(.,locale=cl)) ) -&gt; college1stYearDataA college1stYearDataA %&gt;% select(一年級男生,一年級女生) vars() can work with the following select helper functions: 使用文字特徵： starts_with()：以什麼文字開頭 ends_with()：以什麼文字結尾 contains()：包含什麼文字 matches()：其他複雜可透過regular expression表示的文字規則 使用數字特徵：想選出變數x001,x002,…,x083 num_range()：num_range(&quot;x&quot;,1:83) 範例 利用變數名稱規則 collegeData %&gt;% mutate_at( vars(starts_with(&quot;一年級&quot;)), funs(parse_number(.,locale=cl)) ) -&gt; college1stYearDataB college1stYearDataB %&gt;% select(一年級男生,一年級女生) 將原始collegeData資料裡的所有男/女生變數都轉成numeric class。 "],
["references.html", "参考資料", " 参考資料 "]
]
